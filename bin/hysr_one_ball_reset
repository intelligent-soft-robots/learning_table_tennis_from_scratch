#!/usr/bin/env python3

import sys, random, logging
import o80, context
from lightargs import BrightArgs, FileExists
from learning_table_tennis_from_scratch.hysr_one_ball import (
    HysrOneBall,
    HysrOneBallConfig,
)
from learning_table_tennis_from_scratch.rewards import JsonReward
from learning_table_tennis_from_scratch.jsonconfig import get_json_config


def execute(reward_config_path, hysr_config_path):

    hysr_config = HysrOneBallConfig.from_json(hysr_config_path)
    reward_function = JsonReward.get(reward_config_path)
    algo_time_step = hysr_config.algo_time_step

    hysr = HysrOneBall(hysr_config, reward_function)

    trajectory_index = 49
    print(
        "using ball trajectory file: ",
        context.BallTrajectories().get_file_name(trajectory_index),
    )
    hysr.set_ball_behavior(index=trajectory_index)

    hysr.reset()
    hysr.reset()
    hysr.reset()
    hysr.reset()


def _configure():
    logging.basicConfig(format="hysr_one_ball_reset | %(message)s", level=logging.INFO)
    files = get_json_config(expected_keys=["reward_config", "hysr_config"])

    return files["reward_config"], files["hysr_config"]


def _run():
    reward_config, hysr_config = _configure()
    execute(reward_config, hysr_config)


if __name__ == "__main__":
    _run()
